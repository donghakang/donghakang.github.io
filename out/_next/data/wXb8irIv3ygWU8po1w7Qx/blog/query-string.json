{"pageProps":{"frontMatter":{"title":"Query String","author":"Dongha Kang","date":"2021-10-28","tag":["JavaScript"]},"slug":"query-string","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      ul: \"ul\",\n      li: \"li\",\n      pre: \"pre\",\n      code: \"code\",\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: \"오늘 시도한 것\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Gatsby JS GraphQL 을 받아서 blogPost들을 받아온 뒤, .md파일에 있는 tag 라는 frontmatter를 설정. 그 이후로 태그를 이용하여 태그 메뉴바를 설정, 설정 후 카테고리에 맞는 포스트 들을 보여준다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h1, {\n        children: \"오늘 배운 것\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"query-string\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-jsx\",\n          children: \"import qs from 'query-string';\\n\\nconsole.log(location.search);\\n// --> '?foo=bar'\\n\\nconst parsed = qs.parse(location.search);\\nconsole.log(parsed);\\n// --> {foo: 'bar'}\\n\\n// http://localhost:8000/blog?tag=something\\n// returns --> something\\nconst { tag } = qs.parse(window.location.search); \\n\"\n        })\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"query-string 을 사용시 window.locationㅡㄹ 좀 더 깔끔하게 원하는 object 데이터로 가져올수 있다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"GET 형식의 데이터 패싱일 경우 굉장히 유용하게 쓰일것 같다 !\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}