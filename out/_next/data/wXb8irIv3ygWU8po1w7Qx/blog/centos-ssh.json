{"pageProps":{"frontMatter":{"title":"⚙️ CentOS에서 ssh 설정하기","author":"Dongha Kang","date":"2021-11-14","tag":["ssh","centOS"]},"slug":"centos-ssh","mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      p: \"p\",\n      h2: \"h2\",\n      hr: \"hr\",\n      strong: \"strong\",\n      pre: \"pre\",\n      code: \"code\",\n      h3: \"h3\",\n      ol: \"ol\",\n      li: \"li\",\n      a: \"a\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        children: \"Hi, CentOS\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"현재 근무지에서 새로운 서버를 구축하기로 했고, 이 CentOS 로 다른 컴퓨터에서도 ssh 원격으로 접속 할 수 있게끔 설정을 처음부터 해보는 시간을 가졌다.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"⁇ 너의 ip, port는\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"우선 현재 통신망이 global 로 (iptime)으로 설정된 상태이니, 192.168.0.1 을 접속해서 현재 통신망 설정을 알아본다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"아이디와 비밀번호를 입력해서 로그인을 한뒤에 제일 먼저 보이는 Static IP WAN IP를 확인하면 되는데, 그것이 바로 global IP(X.X.X.X) 라고 생각하면 되고 그것을 이용해서 나중에 통신을 할 예정이다.\"\n      }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n        children: \"🔁 Port forwarding\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.strong, {\n          children: \"port forwarding\"\n        }), \"이란, 외부에서 공유기로 진입이 외부 IP를 통해 진입이 되고 내부 IP 로 넘어 오게 되는데 이 때 새로운 주소를 줘서 네트워크의 주소를 변경해주는, 즉 외부에서 접속이 가능하도록 Port를 주는것이 바로 포트 포워딩 입니다. 다시말해, 컴퓨터들에게 특정 포트를 개방시켜서 서로 통신이 될 수 있돌록 만들어 주는 것입니다.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"우선 새로운 서버를 Port forwarding 하기전 새 컴퓨터를 네트워크에 연결 시킨 후, 어떤 것이 자신의 내부 IP 인지 확인한다 (192.X.X.X).\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"(iptime 기준) Advance setting → NAT/Routing → Port forwarding 에서 +Add new rules 를 눌러서 새로운 rule을 만든다 (ssh, 이 port 기준 TCP 22)\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"저장이 된뒤에 ssh 를 접속 해보자\"\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"ssh -p 12080 root@<global IP>\\n\"\n        })\n      }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n        children: \"✨ Web hosting\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"나의 궁극적인 목표는 \", _jsx(_components.code, {\n          children: \"ssh -p 12080 root@ssh.<web hosting name>\"\n        }), \" 로 했을때 ssh 로그인이 되는것이다.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"이럴때는 웹 호스팅이 있어야하며 도메인 이름도 가지고 있어야한다. 즉 도메인 접속시 web hosting으로 접속, Global IP 로 우회 후 접속이 되야하는것이다.\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"현재 Web hosting과 domain은 bluehost에서 진행이 되고 있다. (bluehost 기준) Domains > Manage (물론 원하는 도메인) > DNS 에 Host record에 이름을 추가하고 Points To 에 Global IP 를 넣으면 된다. 그렇게되면 나중에 ssh로 연결 할때 \", _jsx(_components.code, {\n          children: \"ssh -p <포트넘버> <id>@<host record>.<domain name>\"\n        }), \" 로 실행 시키면 된다. easy.\"]\n      }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n        children: \"🖥 Remote desktop\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"remote desktop control 같은경우 에는 TCP, SSH, SFTP 와는 다르게 RDP (Remote Desktop Protocol)을 설정 해주어야 한다. 웃긴것은 RDP를 하기위해서는 그냥 TCP internal port 3389를 개방하면 된다. 즉, ssh 는 TCP 22를, RDP는 TCP 3389만 개방하면 된다.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"그와 동시에 centos 에서는 rdp를 허용해야하는데 이것은 xrdp 로 실행된다.\"\n      }), \"\\n\", _jsx(_components.h3, {\n        children: \"🏗 download xrdp in centOS\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"우선 centOS 에 EPEL 을 설치한다\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"yum install epel-release\\n# yum info epel-release 로 기존에 다운로드 했는지 안되어있는지 확인할 수 있다.\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"2\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"xrdp와 tigervnc-server를 설치한다\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"yum -y install xrdp tigervnc-server # -y는 질문 없이 항상 yes 로 다운로드 한다.\\n\"\n        })\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"# xrdp 가 잘 다운로드 되어있는지 확인한다.\\n# 요청을 전송하고, Created symlink ... 가 나오면 잘 실행이 되는것이다.\\nchkconfig xrdp on\\nchkconfig vncserver on\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"3\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"xrdp 서비스가 부팅때 자동으로 실행이 되도록 설정한다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"systemctl enable xrdp.service\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"4\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"방화벽에서 xrdp 포트를 열고 재시작한다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"# 실행되지 않는다면 firewalld 를 확인하자\\nsudo firewall-cmd --permanent --zone=public --add-port=3389/tcp\\nsudo firewall-cmd --reload\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"더 많은 방화벽 cmd 는 \", _jsx(_components.a, {\n          href: \"https://www.manualfactory.net/10153\",\n          children: \"https://www.manualfactory.net/10153\"\n        })]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"sudo firewall-cmd --state\\nsudo firewall-cmd --list-all\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.ol, {\n        start: \"5\",\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"xrdp 서비스 시작\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.pre, {\n        children: _jsx(_components.code, {\n          className: \"language-bash\",\n          children: \"systemctl start xrdp.service\\n\"\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [_jsx(_components.a, {\n          href: \"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=jkssleeky&logNo=220813507540\",\n          children: \"출처\"\n        }), \"📝\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}