[
  {
    "title": "Pulmorad",
    "slug": "pulmorad",
    "link": "https://github.com/donghakang/Pulmorad",
    "content": {
      "title": "Pulmorad",
      "image": "pulmorad.png",
      "data": "<h2>🎉 Pulmorad 란?</h2><p><b>Pulmorad</b>는 React 기반 웹사이트로서 의료이미지(DICOM)를 오픈하고 이미지를 변형 할 수 있게해주는 툴입니다. OHIF Viewer라는 기존에 있는 오픈소스를 사용했고, 추가적인 기능을 cornerstone-tools, dicomweb-client와 React를 이용하여 구현 했습니다. 또한, Material-UI나 React-toastify등을 이용하여 웹 사이트를 꾸몄습니다.</p><h2>👨🏻‍💻 개인의 역할</h2><ul><li>이미지의 Threshold를 바꿀 수 있는 UI 개발</li><li>Fastapi, Postgres를 사용하여 Annotation 저장 기능 구현</li><li>Annotation 공유 기능(개인/그룹)을 위한 DB 재설계</li><li>등등...</li></ul>"
    }
  },
  {
    "title": "Oatjang",
    "slug": "oatjang",
    "content": {
      "title": "옷장, 중고 옷거래",
      "image": "oatjang.png",
      "data": "<h2>🎉 옷장 이란?</h2><p><b>OatJang</b>은 Java, JSP, SQL을 사용하여 제작한 웹사이트로서 중고 옷 거래를 목적으로 하는 커뮤니티 웹사이트입니다.</p><p>기본적인 블로그 형태로, 게시글 올리기, 댓글, 대-댓글, admin페이지 등을 구현하였습니다.</p><p>아이디어 자체는 현재 존재하는 중고 거래사이트 (당근마켓, 중고나라, 번개장터)를 오마주 했으며 추가적인 기능으로는 지도에서 직접적으로 옷 매물을 확인 할 수 있는 기능을 만들었습니다.</p><h2>👨🏻‍💻 개인의 역할</h2><ul><li>카카오 맵 API 를 사용한 맵 뷰</li><li>JSP와 Java를 이용한 API와 백엔드의 전체적인 설계</li><li>SQL을 이용한 전반적인 DB 설계</li></ul>"
    }
  },
  {
    "title": "Merona Todolist",
    "slug": "merona",
    "link": "https://github.com/donghakang/Merona_TodoList",
    "content": {
      "title": "올때, 메로나",
      "image": "merona.png",
      "data": "<h2>🎉 올때, 메로나란?</h2> <p> <b>올때, 메로나</b>는 Android 어플리케이션으로 사용자들과 해야할 일들을 저장 및 공유할 수 있는 어플리케이션입니다. </p><p>아이폰의 \"미리 알림\" 어플리케이션, 그 외 Todolist, Any.do, Do! 등 할일 목록 어플리케이션을 오마주 했으며 그 이상으로 추가적으로 메소드를 구현하여 더 발전된 할일 목록 어플리케이션을 제작했습니다.</p><p>올때, 메로나는 기존 미리 알람 기능과는 다르게, <b>지도로 할일 확인하기</b>,<b>사람들과 공유하기</b>,<b>한일 목록 및 레벨 시스템</b>이 가능하도록 만들어졌습니다.</p><p>이 프로젝트는 개인 프로젝트였으며 소스코드와 간단한 소개를 보기위해 링크를 눌러주세요.</p>"
    }
  },
  {
    "title": "animation",
    "slug": "animation",
    "link": "https://sites.google.com/umn.edu/donghakang-csci5611/home?authuser=1",
    "content": {
      "title": "Animation",
      "image": "animation.png",
      "data": "<h2>🎉 Animation</h2> <p> Java와 Processing을 이용하여 다양한 알고리즘과 물리를 배우며 그 이론들을 이용해 다양한 애니메이션(물리 엔진)을 만들어봤습니다.</p> <p>구현 해본 알고리즘/애니메이션으로는 아래와 같습니다.</p><ul><li>중력을 사용한 공 튀기기와 Particle System</li><li>Spring Force를 이용한 Cloth 시물레이션과 푸딩 시뮬레이션</li><li>A*와 Djikstra 알고리즘을 이용한 Path finding</li><li>Boid를 이용한 물고기 시뮬레이션</li><li>RRT를 이용한 번개 시뮬레이션</li></ul><p>실제로 작성했던 문서를 확인하기 위해 아래 링크를 눌러주세요</p>"
    }
  },
  {
    "title": "Football POV",
    "slug": "football",
    "link": "https://github.com/donghakang/Football_POV",
    "content": {
      "title": "Football POV",
      "image": "football.png",
      "data": "<h2>🎉 Football POV</h2><p><b>Football POV </b>는 컴퓨터 비젼 수업을 수강했을 당시 진행했던 프로젝트로서, 미국에서 흔히 가지고 노는 미식축구 공에 카메라를 부착하여 촬영한 영상을 과연 자연스러운 동영상으로 전환할 수 있을까라는 의문에서 시작된 프로젝트입니다. </p><p>기존 <a href='https://www.youtube.com/watch?v=GEPl-vHW_98&t=3s'>BallCam!</a>이라는 프로젝트를 오마주 했으며 다른 점은 BallCam! 프로젝트 같은 경우 미식축구 공 측면에 카메라를 부착한 반면 저희는 미식축구 공 전면에 카메라를 부착했습니다.<h2>👨🏻‍💻 개인의 역할</h2>OpenCV 와 numpy를 사용해서 만들어진 스크립트를 구성했으며, 추출된 이미지들의 threshold 값을 변경하고 이미지를 이어서 동영상을 만드는 작업을 했습니다. </p> <p>프로젝트에서 아쉬웠던 점은 동영상 촬영을 해가 질 때 진행해서 하늘이 붉게 물들었었고 그 때문에 미식축구공과 하늘의 색깔에 큰 차이가 없어서 Gaussian Blur를 적용했을때 테두리를 잘 추출하지 못해서 동영상도 자연스러운 동영상이 만들어 지지 않았습니다. 또한 딥러닝을 사용하지 않고 OpenCV만 사용해서 결과값이 많이 아쉬웠습니다.</p>"
    }
  },
  {
    "title": "VR Paint",
    "slug": "vr-paint",
    "link": "https://github.com/donghakang/VR_Paint",
    "content": {
      "title": "VR Paint",
      "image": "vrpaint.png",
      "data": "<h2>🎉 VR Paint</h2><p><b>VR Paint</b>는 Unity 와 C#을 사용하여 만들어진 어플리케이션으로, Oculus를 끼고 가상환경에 그림을 그릴 수 있는 3D 그림판 어플리케이션 입니다. 선 뿐만아니라 색깔 및 텍스쳐를 바꿀 수 있도록 구현하고, 또한 User Interface의 중요성을 강조하기 위해 손목에 tool을넣는 구현도 했습니다.</p>"
    }
  },
  {
    "title": "Bezier Curve",
    "slug": "bezier-curve",
    "demo": [
      "https://codepen.io/donghakang/pen/QWqrJQY",
      "https://codepen.io/donghakang/pen/qBPYQKR"
    ],
    "link": "https://github.com/donghakang/Bezier_Curve_3D",
    "content": {
      "title": "Bezier Curve",
      "image": "bezier.png",
      "data": "<h2>🎉 Bezier Curve / Texture Mapping</h2><p><strong>Bezier curve, Texture mapping</strong>은 WebGL, JavaScript 프로젝트이며, Bezier curve를 회전축으로 돌려서 3D 형상화 시키는 것과 3D 오브젝트에 빛과 색을 적용시키고 패턴을 입히는 프로젝트를 진행했습니다.</p><h4>Demo</h4><ul><li><a href='https://codepen.io/donghakang/pen/QWqrJQY'>Bezier Curve</a></li><li><a href='https://codepen.io/donghakang/pen/qBPYQKR'>Texture Mapping</a></li></ul>"
    }
  }
]
